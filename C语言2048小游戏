#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <time.h>
#include <Windows.h>
#include <string.h>







// 控制台窗口 宽80 x 高30
int if_left;
int step = 0;
long int score = 0;
long int Time;
int BOX[4][4] = {0};
int empty_position();  
void produceNums_cheat();
void rePlay_cheat();   
void gamePlay_cheat(); 
void gotoxy(int x, int y); // 设置控制台光标位置
void color(int x);         // 设置控制台窗口字体颜色和背景色
void mainMenu();           // 主菜单界面
void menuChoice();         // 菜单选择
void drawGameBox();        // 绘制游戏网格
void regulation();         // 游戏规则
void textColor(int x);     // 设置数字颜色
int keyDown(int x);             // 键盘输入
int ifLeft();              // 能否左移
int ifRight();             // 能否右移
int ifUp();                // 能否上移
int ifDown();              // 能否下移
void drawNums();           // 绘制棋盘数字
void produceNums();        // 生成随机数字
void gamePlay();           // 开始游戏
void rePlay();             // 重新开始游戏
int ifWin();               // 游戏胜利
int ifLose();              // 游戏失败


void cls() //部分清屏  
 {   
     gotoxy(2, 1);   
     for (int i = 1; i < 26; i++)   
     {   
         for (int j = 2; j < 78; j++)   
             printf(" ");   
         gotoxy(2, i);   
     }   
 }   



//定义隐藏光标函数
void HideCursor()
{
	CONSOLE_CURSOR_INFO cursor;    
	cursor.bVisible = FALSE;    
	cursor.dwSize = sizeof(cursor);    
	HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);    
	SetConsoleCursorInfo(handle, &cursor);
}




// 设置控制台光标位置
void gotoxy(int x, int y)
{
	COORD c;
	c.X = x;
	c.Y = y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), c);
}

// 设置控制台窗口字体颜色和背景色
void color(int x)
{
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), x);
}

// 数字颜色
void textColor(int x)
{
	switch(x)
	{
	case 2:
		color(1);
		break;
	case 4:
		color(2);
		break;
	case 8:
		color(3);
		break;
	case 16:
		color(4);
		break;
	case 32:
		color(5);
		break;
	case 64:
		color(6);
		break;
	case 128:
		color(7);
		break;
	case 256:
		color(8);
		break;
	case 512:
		color(9);
		break;
	case 1024:
		color(10);
		break;
	case 2048:
		color(11);
		break;
	}
}

// 能否左移
int ifLeft()
{
	int i, j;
	for(i = 0;i < 4;++i)
	{
		for(j = 3;j > 0;--j)
		{
			if(BOX[i][j] && (BOX[i][j] == BOX[i][j-1] || !BOX[i][j-1]))//     BOX[i][j]非空  box[i][j]==box[i][j]为真，或者box[i][j-1]为空，就可以左移			 
				return 1;																
		}
	}
	return 0;
}

// 能否右移
int ifRight()
{
	int i, j;
	for(i = 0;i < 4;++i)
	{
		for(j = 0;j < 3;++j)
		{
			if(BOX[i][j] && (BOX[i][j] == BOX[i][j+1] || !BOX[i][j+1]))
				return 1;				
		}
	}
	return 0;
}

// 能否上移
int ifUp()
{
	int i, j;
	for(j = 0;j < 4;++j)
	{
		for(i = 3;i > 0;--i)
		{
			if(BOX[i][j] && (BOX[i][j] == BOX[i-1][j] || !BOX[i-1][j]))
				return 1;
		}
	}
	return 0;
}

// 能否下移
int ifDown()
{
	int i, j;
	for(j = 0;j < 4;++j)
	{
		for(i = 0;i < 3;++i)
		{
			if(BOX[i][j] && (BOX[i+1][j] == BOX[i][j] || !BOX[i+1][j]))
				return 1;
		}
	}
	return 0;
}


int *add(int *item)//   ----------------------------------- *合并相同数字*----------------------------
{
	int i, k = 0;
	int *nums = (int*)calloc(4, sizeof(int));
	int *tmp = (int*)calloc(4, sizeof(int));
	for(i = 0;i < 4;++i)
	{
		if(item[i])
			nums[k++] = item[i];
	}
	for(i = 0;i < 3;++i)
	{
		if(nums[i] == nums[i+1])
		{
			nums[i] *= 2;
			nums[i+1] = 0;
			score += nums[i];
		}
	}
	for(i = 0, k = 0;i < 4;++i)
	{
		if(nums[i])
			tmp[k++] = nums[i];
	}
	return tmp;
}

// 绘制游戏棋盘
void drawGameBox()
{   int t;
	int i, j;
	int q;
    srand(time(0));
    q=rand()%15;//随机一种颜色画边框 
	 if(q!=0)
	 {
	  color(q);
	 }
	for(i = 6;i < 23;++i)
	{
		for(j = 19;j < 60;++j)
		{
			gotoxy(j, i);
			if(i == 6 || i == 10 || i == 14 || i == 18 || i == 22)
			
				printf("-");
			else
			{
				printf("|         |         |         |         |");
				break;
			}
		}
	}
	
	color(15);
	gotoxy(20, 5);
	printf("得分：%d", score);
	gotoxy(45, 5);
	printf("执行步数：%d", step);
	gotoxy(45, 23);
	printf("已用时：%d s", time(NULL) - Time);
	
	
}

// 绘制棋盘数字
void drawNums()
{ HideCursor();
	int i, j;
	for(i = 0;i < 4;++i)
	{
		for(j = 0;j < 4;++j)
		{
			if(BOX[i][j]>100&&BOX[i][j]<1000)
			{
				gotoxy(23 + j * 10, 8 + i * 4);
				textColor(BOX[i][j]);
				printf("%d", BOX[i][j]);
			}
			if(BOX[i][j]>1000)
			{
				gotoxy(22 + j * 10, 8 + i * 4);
				textColor(BOX[i][j]);
				printf("%d", BOX[i][j]);
			}
			if(0<BOX[i][j]&&BOX[i][j]<100)
			{
				gotoxy(24 + j * 10, 8 + i * 4);
				textColor(BOX[i][j]);
				printf("%d", BOX[i][j]);
			}
		}
	}
}

// 游戏规则说明
void regulation()
{
	int i, j,ch;
	system("cls");
	int q;
    srand(time(0));
    q=rand()%15;//随机一种颜色画边框 
	 if(q!=0)
	 {
	  color(q);
	 }
	gotoxy(35, 3);
	printf("游戏规则");
	
	for(i = 5;i < 20;++i)
	{
		for(j = 10;j < 70;++j)
		{
			gotoxy(j, i);
			if(i == 5 || i == 19)
				printf("=");
			else if(j == 10 || j == 68)
				printf("||");
		}
	}
	
	gotoxy(13, 7);
	printf("tips1：通过↑ ↓ ← →方向键来移动方块");
	gotoxy(13, 9);
	printf("tips2：按ESC返回主界面或者退出游戏");
	gotoxy(13, 11);
	printf("tips3：在选择的方向上，若有相同的数字则合并");
	gotoxy(13, 13);
	printf("tips4：每移动一步，空位随机出现一个2或4");
	gotoxy(13, 15);
	printf("tips5：棋盘被数字填满，无法进行有效移动，游戏失败");
	gotoxy(13, 17);
	printf("tips6：棋盘上出现2048，游戏胜利（作弊模式密码：123）");
	

     ch = getch();
     //Sleep(3000);
     if(ch==27)
     {
     system("cls");
	 mainMenu();
	 }
	 else
	 {
	 	//system("cls");
	 	regulation();
	   gotoxy(31, 20);
	  printf("按ESC返回主界面！");
	  Sleep(50);
	  gotoxy(31, 20);
	  printf("                 ");
	 }
		
	
	
}


// 生成随机数字
void produceNums()
{
if(empty_position() >0)
{
	
	int x, y;
	srand(time(0));
	do{
		x = rand() % 4;
		y = rand() % 4;
	}while(BOX[x][y]);
	if(rand() % 4 == 0)
		BOX[x][y] = 4;
	else
		BOX[x][y] = 2;	
}		
}


void produceNums_cheat()//作弊模式 
{
if(empty_position() >0)
{
	
	int x, y;
	srand(time(0));
	do{
		x = rand() % 4;
		y = rand() % 4;
	}while(BOX[x][y]);
	if(rand() % 256 == 0)
		BOX[x][y] = 256;
	else
		BOX[x][y] = 128;	
}		
}

// 求棋盘上最大数字
int maxNums()
{
	int i, j, max = INT_MIN;
	for(i = 0;i < 4;++i)
	{
		for(j = 0;j < 4;++j)
		{
			if(BOX[i][j] > max)
				max = BOX[i][j];
		}
	}
	return max;
}


// 求棋盘上空位 
int empty_position()
{
	int i, j, kongwei;
	for(i = 0;i < 4;++i)
	{
		for(j = 0;j < 4;++j)
		{
			if(BOX[i][j]==0)
				kongwei++;
		}
	}
	return kongwei;
}

// 游戏胜利
int ifWin()
{
	int flag = 0;
	if(2048 == maxNums())
	{
		system("cls");
		int q;
    srand(time(0));
    q=rand()%15;//随机一种颜色画边框 
	 if(q!=0)
	 {
	  color(q);
	 }
		gotoxy(6,6);
		printf("■              ■              ■     ■■■■■     ■■        ■");
		gotoxy(6,7);
		printf(" ■            ■■            ■          ■         ■ ■       ■");
		gotoxy(6,8);
		printf("  ■          ■  ■          ■           ■         ■  ■      ■");
		gotoxy(6,9);
		printf("   ■        ■    ■        ■            ■         ■   ■     ■");
		gotoxy(6,10);
		printf("    ■      ■      ■      ■             ■         ■    ■    ■");
		gotoxy(6,11);
		printf("     ■    ■        ■    ■              ■         ■     ■   ■");
		gotoxy(6,12);
		printf("      ■  ■          ■  ■               ■         ■      ■  ■");
		gotoxy(6,13);
		printf("       ■■            ■■            ■■■■■     ■        ■■");
		flag = 1;
	}
	return flag;
}

// 游戏失败
int ifLose()
{
	int flag = 0;
	if(ifLeft() + ifRight() + ifUp() + ifDown() == 0)
	{
		system("cls");
		int q;
    srand(time(0));
    q=rand()%15;//随机一种颜色画边框 
	 if(q!=0)
	 {
	  color(q);
	 }
		gotoxy(19, 6);
		printf("■■■■■    ■         ■    ■ ■ ■");
		gotoxy(19, 7);
		printf("■            ■■       ■    ■      ■");
		gotoxy(19, 8);
		printf("■            ■ ■      ■    ■        ■");
		gotoxy(19, 9);
		printf("■            ■  ■     ■    ■         ■");
		gotoxy(19, 10);
		printf("■■■■      ■   ■    ■    ■          ■");
		gotoxy(19, 11);
		printf("■            ■    ■   ■    ■         ■");
		gotoxy(19, 12);
		printf("■            ■     ■  ■    ■        ■");
		gotoxy(19, 13);
		printf("■            ■      ■ ■    ■      ■");
		gotoxy(19, 14);
		printf("■■■■■    ■       ■■    ■ ■ ■");
		flag = 1;
	}
	return flag;
}

void drawFrame()
{    int i,j;
    
    srand(time(0));
    j=rand()%15;//随机一种颜色画边框 
	 
    color(j);
	gotoxy(2, 2);   
       
    for (i = 0; i < 39; i++)   
    {   
        printf("▇");   
        Sleep(3);   
    }   
     for (i = 2; i < 27; i++)   
     {   
         gotoxy(78, i);   
         printf("▇");   
         Sleep(3);   
     }   
     for (i = 40; i >= 0; i--)   
     {   
         gotoxy(2*i-2, 26);   
         printf("▇");   
         Sleep(3);   
     }   
     for (i = 25; i >= 2; i--)   
     {   
	 if (i<16)
	 {
	     gotoxy(0, i);   
         printf("▇");   
         Sleep(200);	
	 }
	 else
	 {
	 	 gotoxy(0, i);   
         printf("▇");   
         Sleep(1);	
	 }
            
     } 	 		
}

void sign()//签名 随着 方向键不断改变方向（功能已关闭） 
{   static int x;
	if(x<=15)
	           {
	           	//x=0;
	           	x++;
		        gotoxy(60, 27);
				color(13);
				if(x%2==1)
				{
				printf("Creation  by  bobo");
				}
	           	
	           	gotoxy(60, 28);
			   color(13);
			   if(x%2==0)
			   {
			   	printf("Contact 2825551234");
			   }
			   	           	
			   }			   			   			   
			   if(x>14)	
			   {
			   	x=0;
			   }
			   color(x);
			   gotoxy(30, 0);
			   printf("Welcome to 2048");		   			   	   
}


// 开始游戏
void gamePlay()
{
	int i, j,  y, n;
				
	//cls();
	
	system("cls");
	Time = time(NULL);
	drawGameBox();
	produceNums();
	drawNums();
    HideCursor();
    drawFrame();
           
	while(1)
	{	      	           	           	
	    sign();     		   		        			
		if(keyDown(getch()))
		{   empty_position();
			drawGameBox();
			
		if(empty_position() > 0)
			{
			 produceNums();				    		 
			}
			drawNums();
				
			if(!(empty_position()==0&&(ifUp()==0||ifLeft()==0||ifDown()==0||ifRight()==0)))	
			++step;

			if(ifWin())// 成功界面 
			{
				while(1) 
				{
					gotoxy(23, 20);
				color(12);
				printf("请输入：（1.再来一局 2.结束游戏）：");
				scanf("%d",&n);
				
				if(n>=1&&n<=2)
				{
					switch(n) 
					{
						case 1:
						rePlay();
				     	break;
						 
						case 2:
						exit(0);
						break;
						default:
						break;
					}
				}
				else
				{
				printf("\t\t\t  您输入的编号有误，请重新输入！\n");
                 Sleep(1000);
                 fflush(stdin);
                system("cls");
    	         ifWin();	
				}
				}										
	}
		
	if(ifLose())// 失败界面 
			{
				while(1) 
				{
					gotoxy(23, 20);
				color(12);
				printf("请输入：（1.再来一局 2.结束游戏）：");
				scanf("%d",&n);
				
				if(n>=1&&n<=2)
				{
					switch(n) 
					{
						case 1:
						rePlay();
				     	break;
						 
						case 2:
						exit(0);
						break;
						default:
						break;
					}
				}
				else
				{
					printf("\t\t\t  您输入的编号有误，请重新输入！\n");
                 Sleep(1000);
                 fflush(stdin);
                system("cls");
    	         ifLose();	
				}
				}											
	}
	}
}
}

//作弊模式  开始游戏 
void gamePlay_cheat()
{
	int i, j,  y, n;
	static int x;			
	//cls();
	system("cls");
	Time = time(NULL);
	drawGameBox();
	produceNums_cheat();
	drawNums();
    HideCursor();
    drawFrame();
	while(1)
	{
	    sign(); 
		if(keyDown(getch()))
		{   empty_position();
			drawGameBox();
			
		if(empty_position() > 0)
			{
			 produceNums_cheat();			 
			}
			drawNums();
			if(!(empty_position()==0&&(ifUp()==0||ifLeft()==0||ifDown()==0||ifRight()==0)))	
			++step;

			if(ifWin())// 成功界面 
			{
				while(1) 
				{
					gotoxy(23, 20);
				int q;
    srand(time(0));
    q=rand()%15;//随机一种颜色画边框 
	 if(q!=0)
	 {
	  color(q);
	 }
				printf("请输入：（1.再来一局 2.结束游戏）：");
				scanf("%d",&n);
				
				if(n>=1&&n<=2)
				{
					switch(n) 
					{
						case 1:
						rePlay_cheat();
				     	break;
						 
						case 2:
						exit(0);
						break;
						default:
						break;
					}
				}
				else
				{
					printf("\t\t\t  您输入的编号有误，请重新输入！\n");
                 Sleep(1000);
                 fflush(stdin);
                system("cls");
    	         ifWin();	
				}
				}										
	}
		
	if(ifLose())// 失败界面 
			{
				while(1) 
				{
					gotoxy(23, 20);
				int q;
    srand(time(0));
    q=rand()%15;//随机一种颜色画边框 
	 if(q!=0)
	 {
	  color(q);
	 }
				printf("请输入：（1.再来一局 2.结束游戏）：");
				scanf("%d",&n);
				
				if(n>=1&&n<=2)
				{
					switch(n) 
					{
						case 1:
						rePlay_cheat();
				     	break;
						 
						case 2:
						exit(0);
						break;
						default:
						break;
					}
				}
				else
				{
					printf("\t\t\t  您输入的编号有误，请重新输入！\n");
                 Sleep(1000);
                 fflush(stdin);
                system("cls");
    	         ifLose();	
				}
				}											
	}
	}
}
}
// 重新开始游戏
void rePlay()
{
	system("cls");
	score = 0;
	step = 0;
	memset(BOX, 0, 16 * sizeof(int));//把int BOX清零，用这个函数 memset(BOX,0,16*sizeof(int)); 
	gamePlay();
}

// 作弊模式重新开始游戏（为了节省时间，这里的作弊模式，其实就是改变gameplay()函数里面的参数，然后把gameplay()代码再复制一遍） 
void rePlay_cheat()
{
	system("cls");
	score = 0;
	step = 0;
	memset(BOX, 0, 16 * sizeof(int));
	gamePlay_cheat();
}

// 键盘输入
int keyDown(int key)
{
	int i, tmp[4] = {0};
	int *p;
	char ch;
	switch(key)
	{
	case 27: // ESC的ASCII码
		color(12);
		gotoxy(24, 24);
		printf("确定退出游戏么？（y/n）");
		ch = getch();
		if(ch == 'Y' || ch == 'y')
			exit(0);
		else if(ch == 'N' || ch == 'n')
		{
			gotoxy(20,20);
			printf("                            ");
		}
		break;
	case 75: 
		if(ifLeft())		
		{
			for(i = 0;i < 4;++i)
			{				
				tmp[0] = BOX[i][0];
				tmp[1] = BOX[i][1];
				tmp[2] = BOX[i][2];
				tmp[3] = BOX[i][3];
				p = add(tmp);                               //---------------------------- *左移*----------------------------- 
				BOX[i][0] = p[0];
				BOX[i][1] = p[1];
				BOX[i][2] = p[2];
				BOX[i][3] = p[3];
			}
		}
		break;
	case 72: // 上移 
		if(ifUp())
		{
			for(i = 0;i < 4;++i)
			{
				tmp[0] = BOX[0][i];
				tmp[1] = BOX[1][i];
				tmp[2] = BOX[2][i];
				tmp[3] = BOX[3][i];
				p = add(tmp);
				BOX[0][i] = p[0];
				BOX[1][i] = p[1];
				BOX[2][i] = p[2];
				BOX[3][i] = p[3];
			}
		}
		break;
	case 77: // 右移 
		if(ifRight())
		{
			for(i = 0;i < 4;++i)
			{
				tmp[3] = BOX[i][0];
				tmp[2] = BOX[i][1];
				tmp[1] = BOX[i][2];
				tmp[0] = BOX[i][3];
				p = add(tmp);
				BOX[i][0] = p[3];
				BOX[i][1] = p[2];
				BOX[i][2] = p[1];
				BOX[i][3] = p[0];
			}
		}
		break;
	case 80: // 下移 
		if(ifDown())
		{
			for(i = 0;i < 4;++i)
			{
				tmp[3] = BOX[0][i];
				tmp[2] = BOX[1][i];
				tmp[1] = BOX[2][i];
				tmp[0] = BOX[3][i];
				p = add(tmp);
				BOX[0][i] = p[3];
				BOX[1][i] = p[2];
				BOX[2][i] = p[1];
				BOX[3][i] = p[0];
			}
		}
		break;
	default:
		return 0;
		break;
	}
	return 1;
}

// 主菜单界面
void mainMenu()
{    int q;
    srand(time(0));
    q=rand()%15;//随机一种颜色画边框 
	 if(q!=0)
	 {
	  color(q);
	 }
    
	int i, j;
	// 绘制标题2048
	//color(13);
	gotoxy(15,2);
	printf("■■■■■   ■■■■■   ■   ■     ■■■■■");
	//Sleep(150); 
	gotoxy(15,3);
	Sleep(250);
	printf("        ■   ■      ■   ■   ■     ■      ■");
	//Sleep(50);
	gotoxy(15,4);
	printf("        ■   ■      ■   ■   ■     ■      ■");
	//Sleep(150);
	gotoxy(15,5);
	printf("■■■■■   ■      ■   ■   ■     ■■■■■");
	//Sleep(150);
	gotoxy(15,6);
	printf("■           ■      ■   ■■■■    ■      ■");
	//Sleep(250);
	gotoxy(15,7);
	printf("■           ■      ■        ■     ■      ■");
	//Sleep(250);
	gotoxy(15,8);
	printf("■■■■■   ■■■■■        ■     ■■■■■");

	// 绘制选项菜单
	if(q!=0)
	 {
	  color(q);
	 }

gotoxy(15,10);
for (i = 15; i < 39; i++)   
    {   //gotoxy(0, i);
        printf("==");   
        //Sleep(30);   
    }   
     for (i = 10; i < 25; i++)   
     {   
         gotoxy(61, i+1);   
         printf("||");   
         //Sleep(30);   
     }   
     for (i = 29; i >6; i--)   
     {   
         gotoxy(2*i+1, 25);   
         printf("==");   
         //Sleep(30);   
     }   
     for (i = 14; i >= 1; i--)   
     {   
	 
	     gotoxy(15, i+10);   
         printf("||");   
         //Sleep(30);	
	           
     }   

	
	 if(q!=0)
	 {
	  color(q);
	 }
	 
	gotoxy(31, 12);
	printf("\t 1.开始游戏");
	gotoxy(31, 14);
	printf("\t 2.游戏规则");
	gotoxy(31, 16);
	printf("\t 3.退出");
	gotoxy(31, 18);
	printf("\t 4.作弊模式");
}


// 菜单选择
void menuChoice()
{
	int n,password,i;
	while(1)
	{
			
	gotoxy(31, 21); 
	printf("  请输入序号:");
	scanf("%d", &n);
	if(1<=n&&n<=4)
	{
		switch(n)
	{
	case 1:
		system("cls");
		gamePlay();
		break;
	case 2:
		
		regulation();
		break;
	case 3:
		exit(0);
		break;
	case 4:
		 gotoxy(31, 22); 		 
	printf("  请输入密码:");
	scanf("%d", &password);
	if(password==123) 
	{
		gamePlay_cheat();
	}
	else
	{
	Sleep(500);
    fflush(stdin);
    	 gotoxy(17, 22); 		 
	printf("  输入密码有误！调试模式密码在游戏规则里");
	Sleep(1000);
    system("cls");
    mainMenu();		
	}
							
		break;
	default:
		break;
	}
		
	}	
	else
	{
	gotoxy(26, 22);
    printf("您输入的编号有误，请重新输入！\n");
    Sleep(500);
    fflush(stdin);
    system("cls");
    	mainMenu();	
    }
		
	}
 //menuChoice();
 mainMenu();
}   

int main()
{
	while(1)
	{   system("mode con cols=80 lines=30");//控制命令行窗口大小 
		mainMenu();
		menuChoice();
		getch();
		system("cls");
	}
}
